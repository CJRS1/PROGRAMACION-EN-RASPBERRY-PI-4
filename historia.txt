CD: navegar en carpetas
CD /: con eso estoy en home
pwd: para saber en que carpeta estoy
ls: lista de los archivos en la arpeta
ls -al: archivos incluso los ocultos
ls -l: muestera casi todos los archivos
ls -a: muestra archivops pero ya no en lista
%% No diferencia de minusculas con mayusculas
cd U + tab muestra la palabra que tenga U al comienzo en carpetas
cd ..: salgo de todos
mkdir: realiza carpeta
touch: crea archivo vacio
cd .: me quedo en el mismo lugar
cat: muestra lo que estè dentro del archivo
history: muestra los comandos usados
rm: borra el archivo
rm --help: explica que hacen todos los comandos en este caso rm
//////////////////////////
git init: estara la base de datos cdonde estaran los cambios
code: abre visual estudio
git status: estado del proyecto
git add: nuevo archivo es "historia.txt"
git rm : archivo cambia estado 
git rm --cached : se borro
git status: vuelvo a como estaba y luego se hace git add
git commit -m "V2": lo envia al repositorio
git config --global user.name "Christian"
git config --global user.email "---@"
git log historia.txt : muestra las historias
git show historia.txt
ahora:
git add .
git commit: se debe de poner un mensaje (salimos con ESC +shift+zz)
abre un editor dee texto (ESC + i se puede escribir texto)
git diff y copio numeros de commit para compararlos
si se colocanal revez cambia el orden de los cambios
git init: repositorio
genera staging y repositorio
Master v1 v2 v3               commit   vactual vfinal
Experimentos de v3 v2 ... 
Bugfixing                                 v1   v2 
hitfix
git reset : podemos volver a una version anterior
git reset sdkñaskdllñ --hard volvemos a la version anterior  
git reset sdkñaskdllñ --soft 